flowchart TD
    %% 頂部導航功能
    A["GitHub 通知應用"] --> A1["獲取認證會話"]
    A --> A2["獲取用戶倉庫列表"] 
    A --> A3["獲取所有通知數據"]
    A --> A4["獲取用戶倉庫設置"]
    A --> A5["構建視圖模型"]
    
    %% 資料流 - 伺服器到客戶端
    A5 --> SSR["SSR - 作為 props 傳遞"]
    SSR --> Init["initialData 注入 RepoList 元件"]
    Init --> Hydrate["水合處理"]
    Hydrate --> ClientHydrate["Client Hydration (React Query 初始化)"]
    ClientHydrate --> NoRefetch["useQuery with initialData 無需再次獲取"]
    NoRefetch --> RQState["React Query 狀態管理"]
    
    %% 資料使用和更新流程
    RQState --> Display["顯示倉庫和通知列表"]
    
    %% 用戶交互 - 查看詳情
    Display --> |"點擊查看詳情"| DetailClick["觸發詳細加載"]
    DetailClick --> DetailQuery["useQuery notificationDetailQueryOptions"]
    DetailFetch --> DetailAPI["從 API 獲取詳情"]
    DetailAPI --> ShowDetail["顯示通知詳情"]
    
    %% 用戶交互 - 標記已讀
    Display --> |"點擊標記已讀"| ReadClick["觸發標記已讀"]
    ReadClick --> ReadMutation["useMutation 立即更改快取狀態"]
    ReadMutation --> ReadPatch["PATCH /api/notifications/:id/read"]
    ReadPatch --> RQState
    
    %% 用戶交互 - 更新偏好設置
    Display --> |"更改通知偏好"| PrefClick["更改倉庫偏好設置"]
    PrefClick --> PrefMutation["useMutation 立即更改快取狀態"]
    PrefMutation --> PrefPut["PUT /repositories/:repo/preferences"]
    PrefPut --> RQState
    
    %% 樣式設定
    classDef serverNode fill:#f9d77e,stroke:#f9a11b,stroke-width:2px;
    classDef dataFlowNode fill:#a8d1ff,stroke:#3182ce,stroke-width:2px;
    classDef actionNode fill:#9ae6b4,stroke:#38a169,stroke-width:2px;
    classDef apiNode fill:#fbd5e0,stroke:#d53f8c,stroke-width:2px;
    
    %% 應用樣式
    class A,A1,A2,A3,A4,A5 serverNode;
    class SSR,Init,Hydrate,ClientHydrate,NoRefetch,RQState,Display dataFlowNode;
    class DetailClick,ReadClick,PrefClick,DetailQuery,ReadMutation,PrefMutation actionNode;
    class DetailFetch,DetailAPI,ShowDetail,ReadPatch,PrefPut apiNode;
